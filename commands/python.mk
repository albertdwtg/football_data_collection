SHELL := /bin/bash
PYTHON_FOLDER = src
TEST_REQUIREMENTS_FILE = test_requirements.txt
VENV_TEST_DIR = .venv_test
RUFF_CONFIG_FILE = .ruff.toml

define ENV_VARIABLES
PROJECT_ID = "$(GCP_PROJECT_ID)"
PROJECT_ENV = "$(ENV)"
endef
export ENV_VARIABLES

define TEST_REQUIREMENTS
pytest
ruff==0.7.1
endef
export TEST_REQUIREMENTS

define RUFF_CONFIG
[lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # isort
    "I",
	#pylint
	"PL",
	#flake8-bandit
	"S",
]
endef
export RUFF_CONFIG


py-checks:
	@echo 'Start to build python code'
	set -eo pipefail; \
	cd $(PYTHON_FOLDER); \
		echo "$$ENV_VARIABLES" > .env; \
		echo "Create test requirements"; \
		echo "$$TEST_REQUIREMENTS" > $(TEST_REQUIREMENTS_FILE); \
		cat requirements.txt >> $(TEST_REQUIREMENTS_FILE); \
		python3 -m venv $(VENV_TEST_DIR); \
		source $(VENV_TEST_DIR)/bin/activate; \
		echo "Install test requirements"; \
		pip install -r $(TEST_REQUIREMENTS_FILE); \
		echo "$$RUFF_CONFIG" > $(RUFF_CONFIG_FILE); \
		$(VENV_TEST_DIR)/bin/ruff check --config=$(RUFF_CONFIG_FILE);\
		echo "Run unit tests"; \
		python3 -m pytest -q ../tests_py/*;

clean-py-files:
	echo 'Remove files generated by python code testing'
	cd $(PYTHON_FOLDER); \
		rm -f .env;\
		rm -f $(RUFF_CONFIG_FILE);\
		rm -f $(TEST_REQUIREMENTS_FILE);

py-testing: py-checks clean-py-files

local-cf:
	echo 'Start to build python local cloud function'
	set -eo pipefail; \
	cd $(PYTHON_FOLDER); \
		echo 'Create venv'; \
		python3 -m venv .venv; \
		source .venv/bin/activate; \
		echo 'Install requirements'; \
		pip install -r requirements.txt; \
		echo "$$ENV_VARIABLES" > .env; \
		functions-framework --target=run --debug;

